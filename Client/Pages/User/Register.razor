@page "/User/Register"
@using SmartProctor.Shared.Requests
@using SmartProctor.Shared.Responses
@layout LoginLayout
@inject NavigationManager NavManager
@inject HttpClient Http
@inject ModalService Modal

<Form Model="@model"
      OnFinish="OnFinish">
    <Paragraph Class="text-center">User Register</Paragraph>
    <FormItem>
        <Input @bind-Value="@context.Id" Placeholder="User Name"/>
    </FormItem>
    <FormItem>
        <Input @bind-Value="@context.Nickname" Placeholder="Nickname"/>
        </FormItem>
    <FormItem>
        <InputPassword @bind-Value="@context.Password" Placeholder="Password"/>
    </FormItem>
    <FormItem>
        <InputPassword @bind-Value="@context.PasswordConfirm" Placeholder="Confirm Password"/>
    </FormItem>
    <FormItem>
        <Input @bind-Value="@context.Email" Placeholder="Email Address"/>
    </FormItem>
    <FormItem>
        <Input @bind-Value="@context.Phone" Placeholder="Phone number"/>
    </FormItem>
    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Register
        </Button>
        <Button Type="link" OnClick="OnLogin">Login</Button>
    </FormItem>
</Form>

@code {
    private RegisterRequestModel model = new RegisterRequestModel();

    private void OnLogin()
    {
        NavManager.NavigateTo("/User/Login");
    }

    private async Task OnFinish(EditContext editContext)
    {
        var result = await Http.PostAsJsonAsync("api/user/Register", model);
        var response = await result.Content.ReadFromJsonAsync<BaseResponseModel>();

        if (response.Code != 0)
        {
            Modal.Error(new ConfirmOptions()
            {
                Title = "Register failed",
                Content = response.Message
            });
        }
        else
        {
            Modal.Success(new ConfirmOptions()
            {
                Content = "Register OK"
            });
        }
    }

}