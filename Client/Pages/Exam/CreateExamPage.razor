@page "/Exam/Create"
@using SmartProctor.Shared.Requests
@using Microsoft.AspNetCore.Connections
@using SmartProctor.Shared.Questions
@inject NavigationManager NavManager
@inject HttpClient Http
@inject ModalService Modal
@inject IJSRuntime JsRuntime

<Header Class="header">
    
    <div class="logo">SmartProctor Exams</div>
    
    <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Horizontal" Style="text-align:right">
    
    </Menu>
</Header>
<Content Style="padding: 0 50px">
    <Breadcrumb Style=" margin: 16px 0">

    </Breadcrumb>
    <Layout Class="site-layout-background" Style="padding: 24px 0; height: 100%;">

        <Sider Class="site-layout-background" Width="200" Style="margin-bottom: 50px;">
            <Menu Mode="MenuMode.Inline"
                  DefaultSelectedKeys=@(new[] {"basic"})
                  Style="height: 100%; overflow: auto">
                <MenuItem Key="basic">Basic Info.</MenuItem>
                @for (var i = 1; i < questionCount; i++)
                {
                    <MenuItem Key="@i.ToString()">
                        @("Question" + i)
                    </MenuItem>
                }
                <MenuItem Key="add">Add Question</MenuItem>
            </Menu>
        </Sider>
        <Content Style="padding:0 24px; min-height: 280px; overflow: auto; margin-bottom: 30px">
            @if (currentQuestionNum == "basic")
            {
                <Form Model="basicInfo">
                    <FormItem Label="Exam Title">
                        <Input TValue="string" @bind-Value="@context.ExamTitle"/>
                    </FormItem>
                    <FormItem Label="Exam Description">
                        <TextArea @bind-Value="@context.Description"></TextArea>
                    </FormItem>
                    <FormItem Label="Begin Date/Time">
                    </FormItem>
                    <FormItem Label="Duration">
                    </FormItem>
                    <FormItem>
                        <Button Type="@ButtonType.Primary">Confirm</Button>
                    </FormItem>
                </Form>
            }
            else
            {
                <Form Model="currentQuestion">
                    
                </Form>
            }
        </Content>
    </Layout>
</Content>

@code
{
    private int questionCount = 0;
    private string currentQuestionNum = "basic";

    private RenderFragment choicesForm = null;
    private CreateExamRequestModel basicInfo;

    private BaseQuestion currentQuestion = new ChoiceQuestion();
}
