@using SmartProctor.Shared.Questions
@namespace SmartProctor.Client.Pages.Exam

<Card Style="margin-top: 24px;" BodyStyle="padding: 0 32px 40px 32px">
    <TitleTemplate>
        @("Question " + QuestionNum)
    </TitleTemplate>
    <Extra>
        <Button Type="primary" Danger OnClick="_ => OnRemoveQuestion.InvokeAsync()">
            <Icon Type="close" Theme="outline"/>
            Remove
        </Button>
    </Extra>
    <ChildContent>
        <HtmlEditor @ref="@_questionTextEditor" PlaceHolder="Question text here" InitialContent="@Question.Question"/>
        <Divider/>
        <Form Model="Question" LabelColSpan="8" WrapperColSpan="16">
            <FormItem Label="Question type">
                <RadioGroup @bind-Value="@context.QuestionType">
                    <Radio RadioButton Value="@("choice")" CheckedChanged="_ => OnQuestionTypeChange()">Choices</Radio>
                    @*<Radio Value="QuestionType.Fill" RadioButton>Fill</Radio>*@
                    <Radio RadioButton Value="@("short_answer")" CheckedChanged="_ => OnQuestionTypeChange()">Short answer</Radio>
                </RadioGroup>
            </FormItem>
            
            @if (context is ChoiceQuestion q)
            {
                <FormItem Label="Multi-choice">
                    <Checkbox @bind-Value="@q.MultiChoice"></Checkbox>
                </FormItem>
                <FormItem Label="Choices">
                    <AntList DataSource="@q.Choices" Bordered="true"
                             Style="margin-right: 100px; margin-left: 10px; max-height: 50%; overflow: scroll">
                        <ChildContent Context="item">
                            <ListItem>
                                <span>@item</span>
                                <div>
                                    <Button Type="@ButtonType.Link"
                                            Style="padding-left: 2px; padding-right: 2px" OnClick="() => OnEditChoice(item)">
                                        <Icon Type="edit" Theme="outline" Style="font-size: 20px;"/>
                                    </Button>
                                    <Button Type="@ButtonType.Link" Danger
                                            Style="padding-left: 2px; padding-right: 2px" OnClick="() => OnRemoveChoice(item)">
                                        <Icon Type="close" Theme="outline" Style="font-size: 20px;"/>
                                    </Button>
                                </div>
                            </ListItem>
                        </ChildContent>

                        <Footer>
                            <Button Type="primary" OnClick="OnAddChoice">Add</Button>
                        </Footer>
                    </AntList>
                </FormItem>
            }
        @*else if (context is FillQuestion fq)
        {
            <FormItem Label="Blanks">
                <AntList DataSource="fq.BlankType" Style="width: 60%; margin-left: 10px">
                    <ChildContent Context="item">
                        <ListItem>
                                                    
                        </ListItem>
                    </ChildContent>
                </AntList>
            </FormItem>
        }*@
            else if (context is ShortAnswerQuestion sq)
            {
                <FormItem Label="Maximum word count">
                    <AntDesign.InputNumber TValue="int" @bind-Value="@sq.MaxWordCount"></AntDesign.InputNumber>
                </FormItem>

                <FormItem Label="Rich Text">
                    <Checkbox @bind-Value="@sq.RichText"></Checkbox>
                </FormItem>
            }
        </Form>
    </ChildContent>
</Card>
<Modal Visible="_editChoice" OnOk="OnChoiceConfirmed" OnCancel="OnChoiceCancel" Title="Edit choice">
    <ChildContent>
        <TextArea @bind-Value="@_choiceEditor"/>
    </ChildContent>
</Modal>