@namespace SmartProctor.Client.Pages.Exam
@using SmartProctor.Shared.Responses

@{
    RenderFragment footer = @<div>
                                <Button Disabled="@(currentStep == 1)" OnClick="Previous">Previous</Button>
                                <Button
                                    Type="primary"
                                    Style="@(currentStep == 4 ? "display:none" : "")"
                                    OnClick="Next">
                                    Next
                                </Button>
                                <Button Type="primary" Disabled="@(currentStep < 4)"
                                        OnClick="async () => await OnFinish.InvokeAsync()">
                                    Finish
                                </Button>
                            </div>;
}

<Modal Title="Enter the test" Footer="footer" Visible="Visible" Style="width:800px; ">
    <div style="@(currentStep == 1 ? "" : "display:none")">
        <Paragraph>
            Before entering the test, please get your DeepLens hardware connected. To
            set up the DeepLens hardware, please connect it to your PC with a USB wire. Note
            that the USB wire should be connected to the USB port marked with "Registration".
        </Paragraph>
        <Paragraph>
            <Image Src="/img/camera_setup.png" Preview="false"></Image>
        </Paragraph>
        <Paragraph>
            If you are using a wired connection or VPN, disconnect them since they will make the
            DeepLens hardware undetectable. After connected, click "Detect". Once detected, verify that
            the displayed serial number is identical to the S/N printed on the device, then click "Next"
        </Paragraph>

        <Paragraph>
            <Button Type="primary" OnClick="DetectHardware" Loading="isDetecting">Detect</Button>
        </Paragraph>
    </div>
    <div style="@(currentStep == 2 ? "" : "display:none")">
        <Paragraph>
            To get your DeepLens device online, please plug in a USB Ethernet adapter or connect to a
            wireless network.
        </Paragraph>
        <Paragraph>
            Device network status:
            <div>
                Wired network:&nbsp;&nbsp;
                <Icon Type="check-circle" Theme="outline" Style="@(ethernetConnected ? "color:green" : "color:red")"/>
                <label style="@(ethernetConnected ? "color:green" : "color:red")">
                    &nbsp;@(ethernetConnected ? "Connected" : "Not connected")
                </label>
            </div>
            <div>
                Wireless network:&nbsp;&nbsp;
                <Icon Type="check-circle" Theme="outline" Style="@(wirelessSSID != null ? "color:green" : "color:red")"/>
                <label style="@(wirelessSSID != null ? "color:green" : "color:red")">
                    &nbsp;@(wirelessSSID != null ? "Connected, SSID: " + wirelessSSID : "Not connected")
                </label>
            </div>
        </Paragraph>
        <Paragraph>
            <Button OnClick="GetNetworkStatus">Refresh network status</Button>
        </Paragraph>
        @if (wifiList != null)
        {
            <Paragraph>
                Connect to a new wireless network:
            </Paragraph>
            <Space>
                <SpaceItem>
                    <Select @bind-Value="@selectedWifi"
                             Style="width: 240px;"
                             TItemValue="string"
                             TItem="string"
                             Placeholder="Select a wireless network">
                        <SelectOptions>
                            @foreach (var wifi in wifiList)
                            {
                                <SelectOption TItemValue="string" TItem="string"
                                              Value="wifi.Ssid" Label="@wifi.Ssid"/>
                            }
                        </SelectOptions>
                    </Select>
                </SpaceItem>
                <SpaceItem>
                    <Input TValue="string" @bind-value="@wifiPassword" PlaceHolder="Wireless password" Style="width: 240px;"/>
                </SpaceItem>
                <SpaceItem>
                    <Button Type="primary" Loading="isWifiConnecting" OnClick="ConnectWifi">Connect</Button>
                </SpaceItem>
                <SpaceItem>
                    <Button OnClick="GetWifiList">
                        <Icon Type="reload" Theme="outline"/>
                    </Button>
                </SpaceItem>
            </Space>
        }
    </div>
    <div style="@(currentStep == 3 ? "" : "display:none")">
        <Paragraph>
            Please wait until the camera video from the DeepLens shows on the page. Then unplug the USB cable and put
            your DeepLens hardware on an angle where your entire desktop, your computer screen is visible.
        </Paragraph>
        <Paragraph>
            <video class="proctor-video-large" id="camera-video-dialog" autoplay></video>
        </Paragraph>
    </div>
    <div style="@(currentStep == 4 ? "" : "display:none")">
        <Paragraph>
            Click the "Share screen" below to share your desktop to the proctor, you should share your entire screen
            instead of a window or a browser tab
        </Paragraph>
        <Paragraph>
            <Button Type="primary" OnClick="() => OnShareScreen.InvokeAsync()">Share screen</Button>
        </Paragraph>
        <Paragraph>
            <video class="proctor-video-large" id="desktop-video-dialog" autoplay></video>
        </Paragraph>
    </div>
    @if (tipType != 0)
    {
        <Alert Type="@(tipType == 1 ? AlertType.Success : AlertType.Error)"
               Message="@tipText" ShowIcon>
        </Alert>
    }
</Modal>