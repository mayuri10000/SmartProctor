@{
    RenderFragment toggleCamera = @<Template>
                                      <Icon Type="video-camera" OnClick="ToggleCamera" Style="@(showingDesktop ? "" : "color:blue")"></Icon>
                                  </Template>;

    RenderFragment toggleDesktop = @<Template>
                                       <Icon Type="desktop" OnClick="ToggleDesktop" Style="@(showingDesktop ? "color:blue" : "")"></Icon>
                                   </Template>;

    RenderFragment iconWarnings = @<Template>
                                      <Icon Type="warning" Style="@(hasWarnings ? "color:red;" : "")"></Icon>
                                  </Template>;
}

<Card Size="small" Title="@TestTakerName" Actions="new[] {toggleCamera, toggleDesktop, iconWarnings}">
    <Body>
        <video id="@(TestTakerName + "-camera")" class="proctor-video" autoplay style="@(showingDesktop ? "display:none;" : "")"></video>
        <video id="@(TestTakerName + "-desktop")" class="proctor-video" autoplay style="@(showingDesktop ? "" : "display:none;")"></video>
    </Body>
</Card>

@code
{
    [Parameter]
    public string TestTakerName { get; set; }

    private bool showingDesktop;
    private bool hasWarnings;

    private void ToggleDesktop()
    {
        showingDesktop = true;
        StateHasChanged();
    }

    private void ToggleCamera()
    {
        showingDesktop = false;
        StateHasChanged();
    }
}